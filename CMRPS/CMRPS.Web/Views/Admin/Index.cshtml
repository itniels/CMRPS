@model CMPRS.Web.Models.SettingsModel

@{
    ViewBag.Title = "Admin Settings";
}

@Html.ActionLink("◄ Go Back", "Index", "Home")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    
    <div class="row">
        <div class="col-md-10">
            <h2>Admin Settings</h2>
        </div>
        <div class="col-md-2">
            <input type="submit" value="Update settings" class="btn btn-xs btn-success"/>
        </div>
    </div>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <h4>Credentials</h4>
            <hr/>
            <div class="row form-group">
                @Html.LabelFor(model => model.AdminUsername, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AdminUsername, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.AdminUsername, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.AdminPassword, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AdminPassword, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.AdminPassword, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.AdminDomain, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AdminDomain, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.AdminDomain, "", new {@class = "text-danger"})
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <h4>Check Computers</h4>
            <hr/>
            <div class="row form-group">
                @Html.LabelFor(model => model.PingInterval, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PingInterval, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.PingInterval, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.WorkerQueues, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.WorkerQueues, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.WorkerQueues, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h4>Wake On Lan</h4>
            <hr/>
            <div class="row form-group">
                @Html.LabelFor(model => model.StartupMethod, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EnumDropDownListFor(model => model.StartupMethod, htmlAttributes: new {@class = "form-control fixed-width-textarea"})
                    @Html.ValidationMessageFor(model => model.StartupMethod, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Logs</h4>
            <hr/>
            <div class="row form-group">
                @Html.LabelFor(model => model.CleanLogs, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CleanLogs)
                    @Html.ValidationMessageFor(model => model.CleanLogs, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.KeepLogsFor, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.KeepLogsFor, new {htmlAttributes = new {@class = "form-control fixed-width-textarea"}})
                    @Html.ValidationMessageFor(model => model.KeepLogsFor, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h4>Shutdown</h4>
            <hr />
            <div class="row form-group">
                @Html.LabelFor(model => model.ShutdownMethod, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EnumDropDownListFor(model => model.ShutdownMethod, htmlAttributes: new {@class = "form-control fixed-width-textarea"})
                    @Html.ValidationMessageFor(model => model.ShutdownMethod, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.ShutdownForce, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ShutdownForce)
                    @Html.ValidationMessageFor(model => model.ShutdownForce, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.ShutdownTimeout, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ShutdownTimeout, new { htmlAttributes = new { @class = "form-control fixed-width-textarea" } })
                    @Html.ValidationMessageFor(model => model.ShutdownTimeout, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.ShutdownMessage, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ShutdownMessage, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ShutdownMessage, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Shutdown</h4>
            <hr />
            <div class="row form-group">
                @Html.LabelFor(model => model.RebootMethod, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EnumDropDownListFor(model => model.RebootMethod, htmlAttributes: new { @class = "form-control fixed-width-textarea" })
                    @Html.ValidationMessageFor(model => model.RebootMethod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.RebootForce, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.RebootForce)
                    @Html.ValidationMessageFor(model => model.RebootForce, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.RebootTimeout, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.RebootTimeout, new { htmlAttributes = new { @class = "form-control fixed-width-textarea" } })
                    @Html.ValidationMessageFor(model => model.RebootTimeout, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.RebootMessage, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.RebootMessage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RebootMessage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
